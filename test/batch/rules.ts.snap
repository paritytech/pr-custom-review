// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rules Approved for AndDistinctRule when user belongs to multiple teams 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'condition[1]' => Set(1) { 'userCoworker2' },
    'condition[0]' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Approved on rule including both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule including both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule including only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule including only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule including only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule including only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule not specifying users or teams 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved on rule not specifying users or teams 2`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved when .github/pr-custom-review.yml is changed 1`] = `
Array [
  "Changed files Set(1) { '.github/pr-custom-review.yml' }",
  "checking on users for team team3 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved when line after lock is modified (+) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'Team Leads Approvals (team team2)' => Set(1) { 'userCoworker2' },
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Approved when line after lock is modified (-) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'Team Leads Approvals (team team2)' => Set(1) { 'userCoworker2' },
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Approved when lock line is modified (+) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'Team Leads Approvals (team team2)' => Set(1) { 'userCoworker2' },
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Approved when lock line is modified (-) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'Team Leads Approvals (team team2)' => Set(1) { 'userCoworker2' },
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Approved with condition: exclude for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Approved with condition: exclude for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Approved with condition: include & exclude for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Approved with condition: include & exclude for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Approved with condition: include for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"{\\"include\\":\\"condition\\"}\\" of rule \\"Condition include\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Approved with condition: include for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"{\\"include\\":\\"condition\\"}\\" of rule \\"Condition include\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Has no approval for AndDistinctRule when user belongs to multiple teams 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker2' => { teams: Set(1) { 'team2' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker (team: team).
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker (team: team2), userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Has no approval on rule including both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: null },
  'userCoworker' => { teams: Set(1) { 'team' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 0 were given. The following users have not approved yet: userCoworker2, userCoworker (team: team).",
  "",
]
`;

exports[`Rules Has no approval on rule including both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: null },
  'userCoworker' => { teams: Set(1) { 'team' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 0 were given. The following users have not approved yet: userCoworker2, userCoworker (team: team).",
  "",
]
`;

exports[`Rules Has no approval on rule including only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team' } },
  'userCoworker2' => { teams: Set(1) { 'team' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 0 were given. The following users have not approved yet: userCoworker (team: team), userCoworker2 (team: team).",
  "",
]
`;

exports[`Rules Has no approval on rule including only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team' } },
  'userCoworker2' => { teams: Set(1) { 'team' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 0 were given. The following users have not approved yet: userCoworker (team: team), userCoworker2 (team: team).",
  "",
]
`;

exports[`Rules Has no approval on rule including only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 0 were given. The following users have not approved yet: userCoworker, userCoworker2.",
  "",
]
`;

exports[`Rules Has no approval on rule including only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 0 were given. The following users have not approved yet: userCoworker, userCoworker2.",
  "",
]
`;

exports[`Rules Has no approval on rule not specifying users or teams 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Has no approval on rule not specifying users or teams 2`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Has no approval when .github/pr-custom-review.yml is changed 1`] = `
Array [
  "Changed files Set(1) { '.github/pr-custom-review.yml' }",
  "checking on users for team team3 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team3' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Action files changed\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team3).",
  "",
]
`;

exports[`Rules Has no approval when line after lock is modified (+) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team' } },
  'userCoworker2' => { teams: Set(1) { 'team2' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Locks Reviewers Approvals (team team)\\" does not have approval from the following users: userCoworker (team: team).
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Has no approval when line after lock is modified (-) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team' } },
  'userCoworker2' => { teams: Set(1) { 'team2' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Locks Reviewers Approvals (team team)\\" does not have approval from the following users: userCoworker (team: team).
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Has no approval when lock line is modified (+) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team' } },
  'userCoworker2' => { teams: Set(1) { 'team2' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Locks Reviewers Approvals (team team)\\" does not have approval from the following users: userCoworker (team: team).
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Has no approval when lock line is modified (-) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team' } },
  'userCoworker2' => { teams: Set(1) { 'team2' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Locks Reviewers Approvals (team team)\\" does not have approval from the following users: userCoworker (team: team).
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Has no approval with condition: exclude for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Has no approval with condition: exclude for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Has no approval with condition: include & exclude for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Has no approval with condition: include & exclude for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Has no approval with condition: include for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"{\\"include\\":\\"condition\\"}\\" of rule \\"Condition include\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "ERROR:  The following problems were found:",
  "Rule \\"Condition include\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Has no approval with condition: include for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"{\\"include\\":\\"condition\\"}\\" of rule \\"Condition include\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "ERROR:  The following problems were found:",
  "Rule \\"Condition include\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Is missing approval for AndDistinctRule when user belongs to multiple teams 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Is missing approval on rule including both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker, userCoworker2, userCoworker3",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: null },
  'userCoworker3' => { teams: Set(1) { 'team' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 1 were given. The following users have not approved yet: userCoworker2, userCoworker3 (team: team).",
  "",
]
`;

exports[`Rules Is missing approval on rule including both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker, userCoworker2, userCoworker3",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: null },
  'userCoworker3' => { teams: Set(1) { 'team' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 1 were given. The following users have not approved yet: userCoworker2, userCoworker3 (team: team).",
  "",
]
`;

exports[`Rules Is missing approval on rule including only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 1 were given. The following users have not approved yet: userCoworker2 (team: team).",
  "",
]
`;

exports[`Rules Is missing approval on rule including only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 1 were given. The following users have not approved yet: userCoworker2 (team: team).",
  "",
]
`;

exports[`Rules Is missing approval on rule including only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: null } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 1 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Is missing approval on rule including only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: null } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs at least 2 approvals, but 1 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Is missing approval on rule not specifying users or teams 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews [Map Iterator] { { id: 1, user: 'userCoworker', isApproval: true } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Is missing approval on rule not specifying users or teams 2`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews [Map Iterator] { { id: 1, user: 'userCoworker', isApproval: true } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Is missing approval when .github/pr-custom-review.yml is changed 1`] = `
Array [
  "Changed files Set(1) { '.github/pr-custom-review.yml' }",
  "checking on users for team team3 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team3' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Action files changed\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team3).",
  "",
]
`;

exports[`Rules Is missing approval when line after lock is modified (+) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) {
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Is missing approval when line after lock is modified (-) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) {
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Is missing approval when lock line is modified (+) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) {
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Is missing approval when lock line is modified (-) 1`] = `
Array [
  "Diff has changes to ğŸ”’ lines or lines following ğŸ”’",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "Changed files Set(1) { 'condition' }",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'Locks touched',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) {
    'Locks Reviewers Approvals (team team)' => Set(1) { 'userCoworker' }
  }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Locks touched\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"Team Leads Approvals (team team2)\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Is missing approval with condition: exclude for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Is missing approval with condition: exclude for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Is missing approval with condition: include & exclude for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Is missing approval with condition: include & exclude for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
]
`;

exports[`Rules Is missing approval with condition: include for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"{\\"include\\":\\"condition\\"}\\" of rule \\"Condition include\\" for the file condition",
  "latestReviews [Map Iterator] { { id: 1, user: 'userCoworker', isApproval: true } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Condition include\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Is missing approval with condition: include for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"{\\"include\\":\\"condition\\"}\\" of rule \\"Condition include\\" on diff",
  "latestReviews [Map Iterator] { { id: 1, user: 'userCoworker', isApproval: true } }",
  "ERROR:  The following problems were found:",
  "Rule \\"Condition include\\" requires at least 2 approvals, but 1 were given.",
  "",
]
`;

exports[`Rules Reviews are not requested if prevent_review_requests is set for team 1`] = `
Array [
  "Changed files Set(1) { '.github/pr-custom-review.yml' }",
  "checking on users for team team3 : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team3' } },
  'userCoworker2' => { teams: Set(1) { 'team3' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"Action files changed\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker (team: team3), userCoworker2 (team: team3).",
  "",
]
`;

exports[`Rules Reviews are not requested if prevent_review_requests is set for user 1`] = `
Array [
  "Changed files Set(1) { '.github/pr-custom-review.yml' }",
  "checking on users for team team3 : userCoworker, userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: Set(1) { 'team3' } },
  'userCoworker2' => { teams: Set(1) { 'team3' } }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"Action files changed\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker (team: team3), userCoworker2 (team: team3).",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Approved specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true},{\\"id\\":2,\\"user\\":\\"userCoworker3\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 3,
  combinationApprovedByMostPeopleOverall: Map(3) {
    'condition[2]' => Set(1) { 'userCoworker3' },
    'condition[0]' => Set(1) { 'userCoworker' },
    'condition[1]' => Set(1) { 'userCoworker2' }
  }
}",
]
`;

exports[`Rules Rule kind AndDistinctRule: Approved specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true},{\\"id\\":2,\\"user\\":\\"userCoworker3\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 3,
  combinationApprovedByMostPeopleOverall: Map(3) {
    'condition[2]' => Set(1) { 'userCoworker3' },
    'condition[0]' => Set(1) { 'userCoworker' },
    'condition[1]' => Set(1) { 'userCoworker2' }
  }
}",
]
`;

exports[`Rules Rule kind AndDistinctRule: Approved specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'condition[1]' => Set(1) { 'userCoworker2' },
    'condition[0]' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Rule kind AndDistinctRule: Approved specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'condition[1]' => Set(1) { 'userCoworker2' },
    'condition[0]' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Rule kind AndDistinctRule: Approved specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'condition[1]' => Set(1) { 'userCoworker2' },
    'condition[0]' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Rule kind AndDistinctRule: Approved specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 2,
  combinationApprovedByMostPeopleOverall: Map(2) {
    'condition[1]' => Set(1) { 'userCoworker2' },
    'condition[0]' => Set(1) { 'userCoworker' }
  }
}",
]
`;

exports[`Rules Rule kind AndDistinctRule: Has no approval specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 3 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" does not have approval from the following users: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Has no approval specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 3 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" does not have approval from the following users: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Has no approval specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(2) { 'team', 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Has no approval specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(2) { 'team', 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Has no approval specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Has no approval specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 0 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[0]\\" does not have approval from the following users: userCoworker.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Is missing approval specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(1) { 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 3 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" does not have approval from the following users: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Is missing approval specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(1) { 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 3 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" does not have approval from the following users: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Is missing approval specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Is missing approval specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Is missing approval specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: null } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndDistinctRule: Is missing approval specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "{
  ruleName: 'condition',
  approvalCountOfBestCombination: 1,
  combinationApprovedByMostPeopleOverall: Map(1) { 'condition[0]' => Set(1) { 'userCoworker' } }
}",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: null } }",
  "ERROR:  The following problems were found:",
  "Rule \\"condition\\" needs in total 2 DISTINCT approvals, but 1 were given. Users whose approvals counted towards one criterion are excluded from other criteria. For example: even if a user belongs multiple teams, their approval will only count towards one of them; or even if a user is referenced in multiple subconditions, their approval will only count towards one subcondition.
Subcondition \\"condition[1]\\" does not have approval from the following users: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Approved specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true},{\\"id\\":2,\\"user\\":\\"userCoworker3\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind AndRule: Approved specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true},{\\"id\\":2,\\"user\\":\\"userCoworker3\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind AndRule: Approved specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind AndRule: Approved specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind AndRule: Approved specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind AndRule: Approved specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind AndRule: Has no approval specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Has no approval specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Has no approval specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(2) { 'team', 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndRule: Has no approval specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(2) { 'team', 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndRule: Has no approval specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker.
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Has no approval specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker.
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Is missing approval specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(1) { 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Is missing approval specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(1) { 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Is missing approval specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndRule: Is missing approval specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(1) { 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind AndRule: Is missing approval specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: null } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind AndRule: Is missing approval specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: null } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind OrRule: Approved specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true},{\\"id\\":2,\\"user\\":\\"userCoworker3\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Approved specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true},{\\"id\\":2,\\"user\\":\\"userCoworker3\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Approved specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Approved specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Approved specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Approved specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":0,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker2\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Has no approval specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind OrRule: Has no approval specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker2' => { teams: Set(2) { 'team', 'team2' } },
  'userCoworker3' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).
Subcondition \\"condition[2]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker3.",
  "",
]
`;

exports[`Rules Rule kind OrRule: Has no approval specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(2) { 'team', 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind OrRule: Has no approval specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker2",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(1) { 'userCoworker2' => { teams: Set(2) { 'team', 'team2' } } }",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team).
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2 (team: team2).",
  "",
]
`;

exports[`Rules Rule kind OrRule: Has no approval specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker.
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind OrRule: Has no approval specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true}]",
  "usersToAskForReview Map(2) {
  'userCoworker' => { teams: null },
  'userCoworker2' => { teams: null }
}",
  "ERROR:  The following problems were found:",
  "Subcondition \\"condition[0]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker.
Subcondition \\"condition[1]\\" needs at least 1 approvals, but 0 were given. The following users have not approved yet: userCoworker2.",
  "",
]
`;

exports[`Rules Rule kind OrRule: Is missing approval specifying both teams and users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Is missing approval specifying both teams and users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Is missing approval specifying only teams for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Is missing approval specifying only teams for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "checking on users for team team : userCoworker",
  "checking on users for team team2 : userCoworker2",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Is missing approval specifying only users for changed_files 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" for the file condition",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
]
`;

exports[`Rules Rule kind OrRule: Is missing approval specifying only users for diff 1`] = `
Array [
  "Changed files Set(1) { 'condition' }",
  "Matched expression \\"condition\\" of rule \\"condition\\" on diff",
  "latestReviews are [{\\"id\\":-1,\\"user\\":\\"user\\",\\"isApproval\\":true},{\\"id\\":1,\\"user\\":\\"userCoworker\\",\\"isApproval\\":true}]",
]
`;
